{
    "openapi": "3.0.0",
    "info": {
        "title": "SocialApp API",
        "description": "API for SocialApp",
        "version": "1.0.0"
    },
    "paths": {
        "/api/comments": {
            "post": {
                "tags": [
                    "Comments"
                ],
                "summary": "Create a new comment",
                "operationId": "c5026a090c828afeeb788745a32f43e1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "post_id",
                                    "content"
                                ],
                                "properties": {
                                    "post_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "This is a comment"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Comment created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/comments/{comment}": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Get a single comment",
                "operationId": "3b3f90fe4cfa72892916d5b1604f7909",
                "parameters": [
                    {
                        "name": "comment",
                        "in": "path",
                        "description": "The ID of the comment to fetch",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved the comment",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Comments"
                ],
                "summary": "Update a comment",
                "operationId": "b1f108a64c6d479a1826b40e38ddaa2b",
                "parameters": [
                    {
                        "name": "comment",
                        "in": "path",
                        "description": "The ID of the comment to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "content"
                                ],
                                "properties": {
                                    "content": {
                                        "type": "string",
                                        "example": "Updated comment content"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Comment updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Comments"
                ],
                "summary": "Delete a comment",
                "operationId": "6754f01918c64cb80f5747353690dba0",
                "parameters": [
                    {
                        "name": "comment",
                        "in": "path",
                        "description": "The ID of the comment to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Comment deleted successfully"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/follow": {
            "post": {
                "tags": [
                    "Follow"
                ],
                "summary": "Follow a user",
                "description": "Follow another user.",
                "operationId": "followUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "followed_user_id"
                                ],
                                "properties": {
                                    "followed_user_id": {
                                        "description": "The ID of the user to follow",
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User followed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User followed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/unfollow": {
            "delete": {
                "tags": [
                    "Follow"
                ],
                "summary": "Unfollow a user",
                "description": "Unfollow a user that is previously followed.",
                "operationId": "unfollowUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "followed_user_id"
                                ],
                                "properties": {
                                    "followed_user_id": {
                                        "description": "The ID of the user to unfollow",
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User unfollowed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User unfollowed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/friends": {
            "get": {
                "tags": [
                    "Friendships"
                ],
                "summary": "List all friends with pagination",
                "operationId": "b749de143f5470e2f8013e89de1ac3f8",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of friends with pagination",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "friends": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Friendship"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Friendships"
                ],
                "summary": "Create a new friendship request",
                "operationId": "e458663142413fd7ed044a08ed383c65",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "friend_id"
                                ],
                                "properties": {
                                    "friend_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Friendship request created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Friendship"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "A friendship request already exists or is pending between these users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "A friendship request already exists or is pending between these users."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/friends/pending": {
            "get": {
                "tags": [
                    "Friendships"
                ],
                "summary": "List all pending friendship requests",
                "operationId": "4a7fe6223c5ffb16f9f5a7e647a01a85",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of pending friendship requests",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "pendingRequests": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Friendship"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "total_pages": {
                                                    "type": "integer"
                                                },
                                                "total_items": {
                                                    "type": "integer"
                                                },
                                                "has_more_pages": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/friends/{friendship}": {
            "put": {
                "tags": [
                    "Friendships"
                ],
                "summary": "Update the status of a friendship",
                "operationId": "c8d4a5f038763b29ee6afd87e7954965",
                "parameters": [
                    {
                        "name": "friendship",
                        "in": "path",
                        "description": "The ID of the friendship to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "status"
                                ],
                                "properties": {
                                    "status": {
                                        "type": "string",
                                        "example": "accepted"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Friendship status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Friendship"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Friendships"
                ],
                "summary": "Delete a friendship",
                "operationId": "bcd88d291d7db59acdda042eaac2d656",
                "parameters": [
                    {
                        "name": "friendship",
                        "in": "path",
                        "description": "The ID of the friendship to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Friendship deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Friendship deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/groups": {
            "get": {
                "tags": [
                    "Groups"
                ],
                "summary": "Retrieve all groups",
                "description": "Returns a list of all groups stored in the database.",
                "operationId": "getGroups",
                "responses": {
                    "200": {
                        "description": "A list of groups",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Group"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Authentication credentials were not provided."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while processing the request."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Groups"
                ],
                "summary": "Create a new group",
                "description": "Stores a new group in the database",
                "operationId": "storeGroup",
                "requestBody": {
                    "description": "Data for the new group",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "owner_id"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "The name of the group",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "The description of the group",
                                        "type": "string"
                                    },
                                    "owner_id": {
                                        "description": "The owner user ID of the group",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Group created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bad request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation error"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/groups/{id}": {
            "put": {
                "tags": [
                    "Groups"
                ],
                "summary": "Update an existing group",
                "description": "Updates group details based on the provided ID and request data.",
                "operationId": "updateGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the group to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Data for updating the group",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "owner_id"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of the group",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Description of the group",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "owner_id": {
                                        "description": "The user ID of the group owner",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Group updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Group"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input provided"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Group not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Group not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": "Name field is required"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Groups"
                ],
                "summary": "Delete a specific group",
                "description": "Deletes a group by its unique identifier. This operation cannot be undone.",
                "operationId": "deleteGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the group to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content, indicates successful deletion with no return data."
                    },
                    "404": {
                        "description": "Not found, no group found with the specified ID.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Group not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized, if the user is not authenticated or lacks the necessary permissions.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error, generic error message when an unexpected condition was encountered.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "c6795f492d96cadfd972e98410352e49",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "username",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "john.doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User is created successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "2|xxxxxxxxxxxxxxxxxx"
                                                },
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate the user",
                "operationId": "706cc62ee74e2511c1f5c992fc921df0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "john.doe"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User is logged in successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "token": {
                                                    "type": "string",
                                                    "example": "3|xxxxxxxxxxxxxxxxxx"
                                                },
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/auth/logout": {
            "delete": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Log out the user",
                "operationId": "b13a237201e9e7a5b92a6476aa6e7803",
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User is logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/photos/{id}": {
            "get": {
                "tags": [
                    "Photos"
                ],
                "summary": "Get a specific photo",
                "description": "Returns the details of a specific photo",
                "operationId": "98697798fa18645f09862414d3244fd8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the photo",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Details of the photo",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Photo"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Photo not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Photos"
                ],
                "summary": "Update a photo",
                "description": "Update the details of a photo",
                "operationId": "c8681b43ef26eda3ab1203fd32868139",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the photo",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "description": "Description of the photo",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Photo updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "photo": {
                                            "$ref": "#/components/schemas/Photo"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Photo not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Photos"
                ],
                "summary": "Delete a photo",
                "description": "Delete a specific photo",
                "operationId": "ceef00491e0d236e99b77cd9ce784bb6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the photo",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Photo deleted successfully"
                    },
                    "404": {
                        "description": "Photo not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/posts": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "List all posts with pagination",
                "operationId": "4186b281454d4cf4c67a3254c731218a",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of posts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "posts": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Post"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/Pagination"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Posts"
                ],
                "summary": "Create a new post",
                "operationId": "c525736cca34af3402c290c5a680dbde",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "content"
                                ],
                                "properties": {
                                    "content": {
                                        "type": "string",
                                        "example": "This is a great post!"
                                    },
                                    "image": {
                                        "description": "Post image",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/posts/{id}": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Retrieve a single post",
                "operationId": "e0f9a2214074a618841855b152721330",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the post",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved post",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Posts"
                ],
                "summary": "Update an existing post",
                "operationId": "0dec9d9e95078da66ec7717d5b63e8f4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the post to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "content": {
                                        "type": "string",
                                        "example": "Updated post content"
                                    },
                                    "image": {
                                        "description": "Updated post image",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found"
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Posts"
                ],
                "summary": "Delete a post",
                "operationId": "11cb021c9991dd024d16206da5df0ecd",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the post to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post deleted successfully"
                    },
                    "404": {
                        "description": "Post not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/posts/{id}/like": {
            "put": {
                "tags": [
                    "Posts"
                ],
                "summary": "Like or unlike a post",
                "operationId": "toggleLike",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the post to like or unlike",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Like toggled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Post liked successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/profile": {
            "get": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Get the current authenticated user's profile",
                "operationId": "3a6d10a01c0a514e949871d2a838e18b",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Update the current authenticated user's profile",
                "operationId": "551b5675c5135d0483ed3858a93e63a0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "username",
                                    "email"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "username": {
                                        "type": "string",
                                        "example": "johndoe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Profile updated successfully"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/user/{id}": {
            "get": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Get another user's profile by ID",
                "operationId": "c630de20250ed4b37720f4b4f66d9d1f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The user ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "user": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/stories/upload": {
            "post": {
                "tags": [
                    "Stories"
                ],
                "summary": "Upload a new story",
                "operationId": "8f6ceddad11e950a5b7e1befad239b37",
                "requestBody": {
                    "description": "Pass user's story media",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "media"
                                ],
                                "properties": {
                                    "media": {
                                        "description": "The file of the story media",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Story uploaded successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Story uploaded successfully"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "public/stories/yourstory.jpg"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/stories/active": {
            "get": {
                "tags": [
                    "Stories"
                ],
                "summary": "View active stories",
                "operationId": "5bc7331721fc564dd3f11b67b43c9521",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Story"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/stories/{id}": {
            "delete": {
                "tags": [
                    "Stories"
                ],
                "summary": "Delete a specific story",
                "operationId": "d308ac6dfe5b5145a0afbfc44a96a283",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the story to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Story deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Story deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Story not found or access denied",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Story not found or access denied"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Comment": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "post_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "content": {
                        "type": "string",
                        "example": "This is a comment"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-02T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "Follow": {
                "description": "Follow relationship model",
                "properties": {
                    "id": {
                        "description": "Unique identifier of the follow relationship",
                        "type": "integer",
                        "format": "int64"
                    },
                    "follower_user_id": {
                        "description": "The ID of the user who is following",
                        "type": "integer",
                        "format": "int64"
                    },
                    "followed_user_id": {
                        "description": "The ID of the user being followed",
                        "type": "integer",
                        "format": "int64"
                    },
                    "created_at": {
                        "description": "Timestamp when the follow relationship was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Timestamp when the follow relationship was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Friendship": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "friend_id": {
                        "type": "integer",
                        "example": 2
                    },
                    "status": {
                        "type": "string",
                        "example": "pending"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-02T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "Group": {
                "description": "Details about a group",
                "properties": {
                    "id": {
                        "description": "Unique identifier of the Group",
                        "type": "integer"
                    },
                    "name": {
                        "description": "Name of the Group",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of the Group",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "Comment": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "post_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "content": {
                        "type": "string",
                        "example": "This is a comment"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-02T00:00:00Z"
                    }
                },
                "type": "object"
            },            
            "Photo": {
                "required": [
                    "title",
                    "url"
                ],
                "properties": {
                    "id": {
                        "description": "Unique identifier of the photo",
                        "type": "integer",
                        "format": "int64"
                    },
                    "title": {
                        "description": "Title of the photo",
                        "type": "string"
                    },
                    "description": {
                        "description": "Description of the photo",
                        "type": "string"
                    },
                    "url": {
                        "description": "URL of the photo image",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Date and time when the photo was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Date and time when the photo was last updated",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            },
            "Post": {
                "required": [
                    "id",
                    "content"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "content": {
                        "type": "string",
                        "example": "This is a great post about API documentation."
                    },
                    "image": {
                        "type": "string",
                        "example": "http://example.com/image.jpg"
                    },
                    "user_id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01T12:00:00Z"
                    },
                    "likes_count": {
                        "type": "integer",
                        "example": 5
                    },
                    "isLiked": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "Pagination": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "total_pages": {
                        "type": "integer",
                        "example": 15
                    },
                    "total_items": {
                        "type": "integer",
                        "example": 150
                    },
                    "has_more_pages": {
                        "type": "boolean",
                        "example": true
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "username": {
                        "type": "string",
                        "example": "johndoe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-01T00:00:00Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-01-02T00:00:00Z"
                    }
                },
                "type": "object"
            },
            "Story": {
                "properties": {
                    "id": {
                        "description": "The unique identifier of the story.",
                        "type": "integer"
                    },
                    "user_id": {
                        "description": "The unique identifier of the user who posted the story.",
                        "type": "integer"
                    },
                    "media_path": {
                        "description": "The path to the story's media.",
                        "type": "string"
                    },
                    "expiration_time": {
                        "description": "The expiration time of the story.",
                        "type": "string",
                        "format": "date-time"
                    },
                    "created_at": {
                        "description": "The date and time when the story was created.",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "The date and time when the story was last updated.",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Enter token obtained from logging in",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}